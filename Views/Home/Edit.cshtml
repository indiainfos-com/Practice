@model Registration_Form.Models.Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

}





<script src="http://code.jquery.com/jquery-1.7.1.min.js"  type="text/javascript">></script>
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js" type="text/html">
</script>
<script src="~/Scripts/jquery-ui-1.10.4.custom.min.js" type="text/javascript">></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-ui.min.js"  type="text/javascript">></script>

<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/themes/base/all.css" rel="stylesheet" />


<script>
    $(document).ready(function () {
        $("#Country").change(function () {
            $.get("/Home/GetStateList", { CountryId: $("#Country").val() }, function (data) {
                $("#State").empty();
                $.each(data, function (index, row) {
                    $("#State").append("<option value='" + row.StateId + "'>" + row.StateName + "</option>")
                });
            });
        })
    });
</script>

<script type="text/javascript">
    $(function () {
        $(".form-control1").datepicker(
            {
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: '-100y:c+nn',
                maxDate: '-1d'
            });
    });

</script>


@*
    <script type="text/javascript">
        $(function () {
            $("#form-control1").datepicker(
                {
                    dateFormat: "mm/dd/yyyy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: '-100y:c+nn',
                    maxDate: '-1d'
                });
        });
    </script>*@

@*@using (@Html.BeginForm())
    {
        @Html.EditorForModel(new { htmlAttributes = new { @class = "form-control1" } })
       @Html.DropDownListFor(model => model.Country, ViewBag.countryDatas as SelectList, "--Select Country--", new { @class = "form-control" })

        @Html.HiddenFor(model => model.Country)


        @Html.DropDownListFor(model => model.State, new SelectList(" "), "--Select State--", new { @class = "form-control" })

        @Html.HiddenFor(model => model.State)

        <br />
        <input type="submit" value="Save" />
    }*@
<div style="margin-left:40px;">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Student</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.StudentId)

            <div class="form-group">
                @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @*@{
                            Html.RenderAction("BirthDate", "Home");
                        }*@
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control1" } })



                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @if (ViewBag.gender == true)
                    {

                        @Html.RadioButtonFor(model => model.Gender, "Male", new { @checked = true })@Html.Label("Male", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.RadioButtonFor(model => model.Gender, "Female")@Html.Label("Female", new { htmlAttributes = new { @class = "form-control" } })


                    }
                    else
                    {
                        @Html.RadioButtonFor(model => model.Gender, "Male")@Html.Label("Male", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { @checked = true })@Html.Label("Female", new { htmlAttributes = new { @class = "form-control" } })
                    }
                    @*@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @if (ViewBag.countryDatas != null)
                    {


                        @Html.DropDownListFor(model => model.Country, ViewBag.countryDatas as SelectList, "--Select Country--", new { @class = "form-control" })

                        @Html.HiddenFor(model => model.Country)



                    }
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @if (ViewBag.StateData == null)
                    {
                        @Html.DropDownListFor(model => model.State, new SelectList(" "), "--Select State--", new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.State, ViewBag.StateData as SelectList, "--Select State--", new { @class = "form-control" })
                    }
                    @Html.HiddenFor(model => model.State)

                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{

                        Html.RenderAction("EditViewCourse", "Home", new { id = Model.StudentId });

                    }

                    <label class="text-danger"> @ViewBag.Error</label>

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>